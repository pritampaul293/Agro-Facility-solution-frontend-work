{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { createUserWithEmailAndPassword, getAuth, onAuthStateChanged, signInWithEmailAndPassword, signOut, updateProfile } from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport initializeAuthenticaiton from \"../Firebase/firebase.init\"; // initialize firebase\n\ninitializeAuthenticaiton();\n\nconst useFirebase = () => {\n  _s();\n\n  const auth = getAuth();\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true); //   register user\n\n  const registerUser = (email, password) => {\n    setIsLoading(true); // i am just returning the promise here to do some extrea things on sign up page\n\n    return createUserWithEmailAndPassword(auth, email, password);\n  }; //  login with email and password\n\n\n  const loginWithEmail = (email, password) => {\n    setIsLoading(true);\n    return signInWithEmailAndPassword(auth, email, password);\n  }; // save user details for after register\n\n\n  const saveUser = (email, displayName, mobile, location, nidNo, imgUrl) => {\n    const user = {\n      email,\n      displayName,\n      mobile,\n      location,\n      nidNo,\n      imgUrl\n    };\n    console.log(user);\n    fetch(\"http://localhost:5000/users\", {\n      method: \"POST\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n    }).catch(err => {\n      console.log(`Here's the error  from firebase ${err}`);\n    });\n  }; //   logout user\n\n\n  const logOut = () => {\n    setIsLoading(true);\n    signOut(auth).then(() => {\n      alert(\"Logout successfull\");\n    }).finally(() => setIsLoading(false));\n  }; // update user name while user sign up\n\n\n  const updateName = name => {\n    updateProfile(auth.currentUser, {\n      displayName: name\n    }).then(() => {});\n  }; // setting an observer to hanlde user state\n\n\n  useEffect(() => {\n    setIsLoading(true);\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    }); // this clean up function is for better performance a little bit\n\n    return () => unsubscribe;\n  }, []);\n  return {\n    user,\n    setUser,\n    registerUser,\n    updateName,\n    isLoading,\n    setIsLoading,\n    loginWithEmail,\n    logOut,\n    saveUser\n  };\n};\n\n_s(useFirebase, \"6hUK0E8YndCJdFKOGNBKQ9uTnV0=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["H:/projecccct/Adhunik-Krishi-Khamar-Frontend-main/src/hooks/useFirebase.js"],"names":["createUserWithEmailAndPassword","getAuth","onAuthStateChanged","signInWithEmailAndPassword","signOut","updateProfile","useEffect","useState","initializeAuthenticaiton","useFirebase","auth","user","setUser","isLoading","setIsLoading","registerUser","email","password","loginWithEmail","saveUser","displayName","mobile","location","nidNo","imgUrl","console","log","fetch","method","body","JSON","stringify","headers","then","response","json","catch","err","logOut","alert","finally","updateName","name","currentUser","unsubscribe"],"mappings":"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","sourcesContent":["import {\n  createUserWithEmailAndPassword,\n  getAuth,\n  onAuthStateChanged,\n  signInWithEmailAndPassword,\n  signOut,\n  updateProfile,\n} from \"firebase/auth\";\nimport { useEffect, useState } from \"react\";\nimport initializeAuthenticaiton from \"../Firebase/firebase.init\";\n\n// initialize firebase\ninitializeAuthenticaiton();\n\nconst useFirebase = () => {\n  const auth = getAuth();\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  //   register user\n  const registerUser = (email, password) => {\n    setIsLoading(true);\n    // i am just returning the promise here to do some extrea things on sign up page\n    return createUserWithEmailAndPassword(auth, email, password);\n  };\n  //  login with email and password\n  const loginWithEmail = (email, password) => {\n    setIsLoading(true);\n    return signInWithEmailAndPassword(auth, email, password);\n  };\n\n  // save user details for after register\n  const saveUser = (email, displayName, mobile, location, nidNo, imgUrl) => {\n    const user = { email, displayName, mobile, location, nidNo, imgUrl };\n    console.log(user);\n    fetch(\"http://localhost:5000/users\", {\n      method: \"POST\",\n      body: JSON.stringify(user),\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n      })\n      .catch((err) => {\n        console.log(`Here's the error  from firebase ${err}`);\n      });\n  };\n\n  //   logout user\n  const logOut = () => {\n    setIsLoading(true);\n    signOut(auth)\n      .then(() => {\n        alert(\"Logout successfull\");\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  // update user name while user sign up\n  const updateName = (name) => {\n    updateProfile(auth.currentUser, {\n      displayName: name,\n    }).then(() => {});\n  };\n\n  // setting an observer to hanlde user state\n  useEffect(() => {\n    setIsLoading(true);\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n      setIsLoading(false);\n    });\n    // this clean up function is for better performance a little bit\n    return () => unsubscribe;\n  }, []);\n\n  return {\n    user,\n    setUser,\n    registerUser,\n    updateName,\n    isLoading,\n    setIsLoading,\n    loginWithEmail,\n    logOut,\n    saveUser,\n  };\n};\nexport default useFirebase;\n"]},"metadata":{},"sourceType":"module"}